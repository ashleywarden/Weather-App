{"version":3,"sources":["components/Search/Search.js","components/CurrentWeather/CurrentWeatherCard.js","components/CurrentWeather/CurrentWeatherDetailsCard.js","components/CurrentWeather/CurrentWeatherResult.js","components/HourlyWeather/HourlyWeatherCard.js","components/HourlyWeather/HourlyResults.js","components/SevenDayWeather/SevenDayWeatherCard.js","components/SevenDayWeather/SevenDayWeatherResults.js","components/Tab/Tab.js","components/AppTitle/Title.js","App.js","apis/config.js","reportWebVitals.js","index.js"],"names":["Search","updateCoords","updateCity","useState","city","setCity","lat","lng","setLatLng","handleSelect","value","a","geocodeByAddress","results","getLatLng","latLng","className","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","color","description","CurrentWeatherCard","dt","feelslike","temp","icon","src","alt","humidity","wind_speed","uvi","Result","weathers","timezone","Math","round","current","weather","CurrentWeatherDetailsCard","feels_like","HourlyWeatherCard","main","hour","moment","format","HourlyResults","hourly","slice","SevenDayWeatherCard","min_temp","max_temp","date","weekday","SevenDayWeatherResults","daily","day","min","max","NavTab","tabIndex","setTabIndex","selectedIndex","index","Title","App","weatherData","setWeatherData","useEffect","e","getWeatherData","fetch","then","response","json","dataObj","Container","Tab","result","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51145258.chunk.js","sourcesContent":["import { useState } from 'react'\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nimport { FaSearch } from 'react-icons/fa'\n\nconst Search = ({ updateCoords, updateCity }) => {\n\n    const [city, setCity] = useState('')\n    const [latLng, setLatLng] = useState({\n      lat: null, \n      lng: null\n    })\n    const handleSelect = async value => {\n      const results = await geocodeByAddress(value)\n      const latLng = await getLatLng(results[0])\n      \n      setCity(value)\n      setLatLng(latLng)\n      updateCoords(latLng)\n      updateCity(city)\n    }\n\n\n    \n    return (\n\n    <div className=\"search-container\">\n\n    <div className=\"search-bar\">\n    <PlacesAutocomplete\n      value={city} \n      onChange={setCity} \n      onSelect={handleSelect}\n      >{({getInputProps, suggestions, getSuggestionItemProps, loading}) => (\n        <div className=\"search-bar-container\">\n          <div className=\"search-bar-row\">\n            <input {...getInputProps({ placeholder: \"Enter address\" })}/>\n            <span><FaSearch /></span>\n            </div>\n            <div className=\"./images/search-list\">\n            {loading ? <div>...loading</div> : null}\n            {suggestions.map((suggestion) => {\n              const style = {\n                backgroundColor: suggestion.active ? \"gray\" : \"#FFF\",\n                color: suggestion.active ? \"#FFF\" : \"gray\"\n              }\n              return <div className=\"search-list-results\" {...getSuggestionItemProps( suggestion, { style } )}>\n                {suggestion.description}\n                </div>\n            })}\n          </div>\n\n\n        </div>\n      )}\n      </PlacesAutocomplete>\n      </div>\n      </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\n\n\nconst CurrentWeatherCard = ({dt, feelslike, temp, description, icon, city}) => {\n\n    return (\n    <div className=\"weather-card\">\n      <div className=\"weather-card-city\">\n        <h3>{city}</h3>\n      </div>\n        <div className=\"weather-card-icon\">\n          <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"weather icon\"></img>\n        </div>\n        <div className=\"weather-card-temperature\">\n          <h1>{temp}&deg;</h1>\n        </div>\n        <div className=\"weather-card-description\">\n          <p>{description}</p>\n        </div>\n    </div>\n    )\n}\n\nexport default CurrentWeatherCard\n","import React from 'react'\nimport { FaWind, FaTemperatureLow, FaTint, FaSun } from 'react-icons/fa'\n\n\nconst CurrentWeatherCard = ({dt, feelslike, humidity, wind_speed, uvi}) => {\n\n\n    return (\n    <div className=\"weather-details-card\">\n                <div>\n                    <h3><FaTemperatureLow /> Feels Like</h3> \n                    <div>{feelslike}&deg;C</div>\n                </div>\n                <div>\n                    <h3><FaTint /> Humidity</h3>\n                    <div>{humidity}%</div>\n                </div>\n                <div><h3><FaWind /> Wind speed</h3>\n                    <div>{wind_speed} MPH</div>\n                </div>\n                <div><h3><FaSun /> UV Index</h3> \n                    <div>{uvi}</div>\n                </div>\n    </div>\n    )\n}\n\nexport default CurrentWeatherCard\n","import CurrentWeatherCard from './CurrentWeatherCard'\nimport CurrentWeatherDetailsCard from './CurrentWeatherDetailsCard'\n\n\nconst Result = ({ weathers, city }) => {\n\n\n  return (\n\n    <div className=\"current-weather-container\">\n\n    {/**Displaying the CURRENT weather */}\n      <CurrentWeatherCard \n        timezone = {weathers.timezone}\n        city = {city}\n        temp = {Math.round(weathers.current && weathers.current.temp)} //Remove decimal points\n        description = {weathers.current && weathers.current.weather[0].description}\n        icon = {weathers.current && weathers.current.weather[0].icon}\n      />\n\n      <CurrentWeatherDetailsCard \n        feelslike = {Math.round(weathers.current && weathers.current.feels_like)}\n        humidity = {weathers.current && weathers.current.humidity}\n        wind_speed = {weathers.current && weathers.current.wind_speed}\n        uvi = {weathers.current && weathers.current.uvi}\n      />\n    </div>\n  )\n}\n\n  export default Result\n  ","import React from 'react'\nimport moment from 'moment';\nimport './Hourly.css'\n\nconst HourlyWeatherCard = ({dt, temp, main, description, icon, humidity}) => {\n\n    const hour = moment(dt).format('h:mm:ss a')\n\n    return (\n            <div className=\"hourly-weather-card\">\n                <div>\n                    <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"weather icon\"></img>\n                </div> \n                <div>\n                    <p>{hour}</p>\n                    <p>{temp}&deg;C</p>\n                    <p>{description}</p>\n                </div>\n\n            </div>\n    )\n}\n\nexport default HourlyWeatherCard\n","import HourlyWeatherCard from './HourlyWeatherCard'\nimport './Hourly.css'\n\nconst HourlyResults = ({ weathers }) => {\n\n  return (\n    <div className=\"hourly-weather-container\">\n        {weathers.hourly && weathers.hourly.slice(0, 24).map(({dt, temp, weather}) => (\n          <div className=\"hourly-weather-card-container\"key={dt}>\n            <HourlyWeatherCard \n              dt={dt * 1000}\n              icon = {weather[0].icon}\n              main = {weather[0].main}\n              description = {weather[0].description}\n              temp = {Math.round(temp)}\n            />\n            </div>\n        ))}\n      </div>\n\n  )\n}\n\n  export default HourlyResults\n  ","import React from 'react'\nimport moment from 'moment';\n\nconst SevenDayWeatherCard = ({dt, temp, main, description, icon, min_temp, max_temp}) => {\n\n    const date = moment(dt).format('MMMM Do YYYY');\n    const weekday = moment(dt).format('dddd');\n\n    return (\n            <div className=\"seven-day-weather-card\">\n                <div>\n                    <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"weather icon\"></img>\n                </div> \n                <div>\n                    <p>{weekday}</p>\n                    <p>{date}</p>\n                    <p>{temp}&deg;C</p>\n                    <p>Min: {min_temp}&deg;C Max: {max_temp}&deg;C</p>\n                    <p>{main}</p>\n                </div>\n\n            </div>\n    )\n}\n\nexport default SevenDayWeatherCard\n","import SevenDayWeatherCard from './SevenDayWeatherCard'\n\nconst SevenDayWeatherResults = ({ weathers }) => {\n\n  return (\n\n\n    \n    <div className=\"seven-day-container\">\n        {weathers.daily && weathers.daily.map(({dt, temp, weather}) => (\n          <div className=\"seven-day-card-container\"key={dt}>\n            <SevenDayWeatherCard \n              dt={dt * 1000}\n              icon = {weather[0].icon}\n              main = {weather[0].main}\n              description = {weather[0].description}\n              temp = {Math.round(temp.day)}\n              min_temp = {Math.round(temp.min)}\n              max_temp = {Math.round(temp.max)}\n            />\n            </div>\n        ))}\n      </div>\n\n  )\n}\n\n  export default SevenDayWeatherResults\n  ","import React from 'react'\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs'\nimport './TabStyle.css'\nimport { useState } from 'react'\nimport HourlyResults from '../HourlyWeather/HourlyResults'\nimport SevenDayWeatherResults from '../SevenDayWeather/SevenDayWeatherResults'\n\nconst NavTab = ({weathers}) => {\n\n    const [tabIndex, setTabIndex] = useState(0)\n    return (\n\n        /*<Tabs\n            className=\"tab-container\"\n            activeKey={key}\n            onSelect={(k) => setKey(k)}\n        >*/\n        <Tabs selectedIndex={tabIndex} onSelect={index => setTabIndex(index)}>\n            <TabList>\n                <Tab>Hourly</Tab>\n                <Tab>Weekly</Tab>\n            </TabList>\n                <TabPanel>{weathers && <HourlyResults weathers ={weathers} />}</TabPanel>\n                <TabPanel>{weathers && <SevenDayWeatherResults weathers ={weathers} />}</TabPanel>\n            {/*<Tab eventKey=\"hourly\" label=\"Hourly\" id=\"hourly-tab-style\">\n               {weathers && <HourlyResults weathers ={weathers} />}\n            </Tab>\n            <Tab eventKey=\"weekly\" label=\"Weekly\" id=\"weekly-tab-style\">\n                {weathers && <SevenDayWeatherResults weathers ={weathers} />}\n            </Tab>*/}\n        </Tabs>\n    )\n}\n\nexport default NavTab\n","import './Title.css'\n\nconst Title = () => {\n    return (\n        <div className=\"title\">\n            <p>WEATHER APP</p>\n        </div>\n    )\n}\n\nexport default Title\n","import './App.css';\nimport {Container} from 'react-bootstrap'\nimport Search from './components/Search/Search'\nimport Result from './components/CurrentWeather/CurrentWeatherResult'\nimport Tab from './components/Tab/Tab'\nimport Title from './components/AppTitle/Title'\nimport { useState, useEffect } from 'react'\nimport { API_BASE_URL, API_KEY } from './apis/config.js'\n\n\nconst App = () => {\n  //default coordinates set to Vancouver\n  const [latLng, setLatLng] = useState({\n    lat: \"49.2827\",\n    lng: \"-123.1207\"\n  })\n  const [city, setCity] = useState(\"Vancouver, BC, Canada\")\n  const [weatherData, setWeatherData] = useState({})\n\n  //Fetch the weather data\n  useEffect((e) => {\n    const getWeatherData = async () => {\n      fetch(`${API_BASE_URL}data/2.5/onecall?lat=${latLng.lat}&lon=${latLng.lng}&exclude=minutely,alerts&units=metric&appid=${API_KEY}`)\n      .then((response) => response.json())\n      .then((dataObj) => setWeatherData(dataObj))\n    }\n    if (latLng.lat){\n      getWeatherData()\n    }\n  }, [latLng, setLatLng])\n\n\n\n  const getDataFromSearch = result => {\n    setLatLng(result)\n  }\n\n  const getCityFromSearch = value => {\n    setCity(value)\n  }\n\n\n\n  return (\n    <Container className=\"App\">\n\n      <Title />\n\n      <Tab weathers ={weatherData}/>\n\n      <Search className=\"SearchBar\" updateCoords={getDataFromSearch} updateCity={getCityFromSearch}/>\n\n      {weatherData && <Result className=\"Currentweather\" weathers ={weatherData} city={city} />}\n\n    </Container>\n  )\n}\n\nexport default App","//OpenWeatherMap\nexport const API_KEY= '80796dd95025ef25037eaed4eaad17fd';\nexport const API_BASE_URL = 'http://api.openweathermap.org/'\n//Google Geocode\nexport const G_API_KEY= 'AIzaSyDm7um7Tyews8O6p0_2Bv7BaPok7S06g9g';\nexport const G_BASE_URL= 'https://maps.googleapis.com/maps/api/geocode/'","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}